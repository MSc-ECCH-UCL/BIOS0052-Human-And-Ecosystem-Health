knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
# package dependencies
# use the "install.packages()" command if not already installed
library(terra); library(dplyr); library(magrittr); library(ggplot2); library(sf)
# package dependencies
# use the "install.packages()" command if not already installed
library(terra); library(dplyr); library(magrittr); library(ggplot2); library(sf)
library(rstudioapi); library(tidyr); library(stringr); library(mgcv); library(gratia)
# automatically set working directory
# (or if this doesn't work,
# manually set your working directory to the folder "Week3-Measuring-Env-Effects")
PATH = dirname(rstudioapi::getSourceEditorContext()$path)
setwd(PATH)
# the mosquito surveillance data are stored as a csv
# mosquito counts are stored in the "count" column
dd = read.csv("./data/vectabundance/italy_vectabundance_summercounts_monthly.csv")
# an accompanying shapefile of italian municipalities
shp = sf::st_read("./data/shapefiles/italy_vectabundance_regions.shp")
# shapefile of italian border (for mapping)
shp_ita = sf::st_read("./data/shapefiles/gadm41_ITA_0.shp")
# scatter plot of temp vs counts
ggplot(dd) +
geom_point(aes(temperature_c, count), color="skyblue4", alpha=0.8) +
xlab("Monthly temperature (C)") + ylab("Ae albopictus egg count") +
theme_bw() +
theme_classic()
head(dd)
ggplot() +
geom_boxplot(aes(month, precip_mm))
ggplot(dd) +
geom_boxplot(aes(factor(month), precip_mm))
ggplot(dd) +
geom_boxplot(aes(factor(month), precip_mm, fill=factor(month))) +
theme_classic() +
facet_wrap(~Region)
ggplot(dd) +
geom_boxplot(aes(factor(month), precip_mm, fill=factor(month))) +
theme_classic() +
facet_wrap(~Region) +
theme(strip.background = element_blank())
head(dd)
ggplot(dd) +
geom_boxplot(aes(factor(ID), precip_mm, fill=factor(Region))) +
theme_classic() +
theme(strip.background = element_blank()) +
xlab("Location ID") + ylab("Precipitation (mm)")
ggplot(dd) +
geom_boxplot(aes(factor(ID), precip_mm, fill=factor(Region))) +
theme_classic() +
theme(strip.background = element_blank()) +
xlab("Location ID") + ylab("Precipitation (mm)") +
theme(axis.text.x = element_text(angle=90))
ggplot(dd) +
geom_point(aes(precip_mm, count), color="coral2", alpha=0.6) +
theme_classic()
# fit model for linear precip
mp1 = mgcv::gam(count ~ scale(precip_mm) + s(ID, bs="re") + Region + year + month,
data=dd,
family="nb",
method="REML")
summary(mp1)
# fit model for nonlinear precip
# thin-plate regression spline
mp2 = mgcv::gam(count ~ s(precip_mm, k=9, bs="tp") + s(ID, bs="re") + Region + year + month,
data=dd,
family="nb",
method="REML")
# suggests a significant negative effect of precip
summary(mp2)
AIC(mp2)
# compare AIC between two models
AIC(mp1)
# plot the nonlinear precip effect
gratia::draw(m6, select=1) +
xlab("Monthly precipitation (mm)") +
ylab("Effect on log abundance") +
#geom_ribbon(fill="skyblue4", alpha=0.5) +
theme_bw() +
ggtitle("Effect of precipitation on Ae. albopictus abundance") +
theme(plot.title=element_text(size=11, hjust=0.5))
# plot the nonlinear precip effect
gratia::draw(mp2, select=1) +
xlab("Monthly precipitation (mm)") +
ylab("Effect on log abundance") +
#geom_ribbon(fill="skyblue4", alpha=0.5) +
theme_bw() +
ggtitle("Effect of precipitation on Ae. albopictus abundance") +
theme(plot.title=element_text(size=11, hjust=0.5))
# plot temperature vs precip - correlated
ggplot(dd) +
geom_point(aes(precip_mm, temp_c), alpha=0.6) +
theme_classic()
# plot temperature vs precip - correlated
ggplot(dd) +
geom_point(aes(precip_mm, temperature_c), alpha=0.6) +
theme_classic()
# check correlation
cor.test(dd$temperature_c, dd$precip_mm)
# include this in the model
mp3 = mgcv::gam(count ~ s(precip_mm, k=9, bs="tp") + s(temperature_c, k=9, bs="tp") + s(ID, bs="re") + Region + year + month,
data=dd,
family="nb",
method="REML")
# compare AIC
AIC(mp2)
AIC(mp3)
# is there a confounding relationship?
gratia::draw(mp2, select=1) +
xlab("Monthly precipitation (mm)") +
ylab("Effect on log abundance") +
#geom_ribbon(fill="skyblue4", alpha=0.5) +
theme_bw() +
ggtitle("Effect of precipitation on Ae. albopictus abundance") +
theme(plot.title=element_text(size=11, hjust=0.5))
# is there a confounding relationship?
gratia::draw(mp3, select=1) +
xlab("Monthly precipitation (mm)") +
ylab("Effect on log abundance") +
#geom_ribbon(fill="skyblue4", alpha=0.5) +
theme_bw() +
ggtitle("Effect of precipitation on Ae. albopictus abundance") +
theme(plot.title=element_text(size=11, hjust=0.5))
# precipitation
# select the first spline (select=1) using the draw function
precip_plot = gratia::draw(mp3, select=1) +
xlab("Monthly precipitation (mm)") +
ylab("Effect on log abundance") +
#geom_ribbon(fill="skyblue4", alpha=0.5) +
theme_bw() +
ggtitle("Effect of precipitation on Ae. albopictus abundance") +
theme(plot.title=element_text(size=11, hjust=0.5))
# temperature
# select the second spline (select=1) using the draw function
temp_plot = gratia::draw(mp3, select=2) +
xlab("Monthly temperature (C)") +
ylab("Effect on log abundance") +
#geom_ribbon(fill="skyblue4", alpha=0.5) +
theme_bw() +
ggtitle("Effect of temperature on Ae. albopictus abundance") +
theme(plot.title=element_text(size=11, hjust=0.5))
# combine plots
library(patchwork)
comb_plot = precip_plot + temp_plot
# view
comb_plot
comb_plot = precip_plot + temp_plot + patchwork::plot_layout(nrow=1)
# view
comb_plot
temp_plot
# adding a nonlinear temperature effect
m5 = mgcv::gam(count ~ s(temperature_c, k=9, bs="tp") + s(ID, bs="re") + Region + year + month,
data=dd,
family="nb",
method="REML")
# gratia::draw() is a useful function to plot all fitted functions from an mgcv model
# here we customise to just plot the temperature effect and improve aesthetics
gratia::draw(m5, select=1) +
xlab("Monthly temperature (C)") +
ylab("Effect on log abundance") +
theme_bw() +
ggtitle("Effect of temperature on Ae. albopictus abundance") +
theme(plot.title=element_text(size=11, hjust=0.5))
precip_plot
# combine plots
library(gridExtra)
gridExtra::grid.arrange(precip_plot, temp_plot, ncol=2)
# precipitation
# select the first spline (select=1) using the draw function
precip_plot = gratia::draw(mp3, select=1) +
xlab("Monthly precipitation (mm)") +
ylab("Effect on log abundance") +
#geom_ribbon(fill="skyblue4", alpha=0.5) +
theme_bw() +
ggtitle("Effect of precipitation") +
theme(plot.title=element_text(size=11, hjust=0.5))
# precipitation
# select the first spline (select=1) using the draw function
precip_plot = gratia::draw(mp3, select=1) +
xlab("Monthly precipitation (mm)") +
ylab("Effect on log abundance") +
#geom_ribbon(fill="skyblue4", alpha=0.5) +
theme_bw() +
ggtitle("Effect of precipitation") +
theme(plot.title=element_text(size=11, hjust=0.5))
# temperature
# select the second spline (select=1) using the draw function
temp_plot = gratia::draw(mp3, select=2) +
xlab("Monthly temperature (C)") +
ylab("Effect on log abundance") +
#geom_ribbon(fill="skyblue4", alpha=0.5) +
theme_bw() +
ggtitle("Effect of temperature") +
theme(plot.title=element_text(size=11, hjust=0.5))
# precipitation
# select the first spline (select=1) using the draw function
precip_plot = gratia::draw(mp3, select=1) +
xlab("Monthly precipitation (mm)") +
ylab("Effect on log abundance") +
#geom_ribbon(fill="skyblue4", alpha=0.5) +
theme_bw() +
ggtitle("Effect of precipitation") +
theme(plot.title=element_text(size=11, hjust=0.5))
# temperature
# select the second spline (select=1) using the draw function
temp_plot = gratia::draw(mp3, select=2) +
xlab("Monthly temperature (C)") +
ylab("Effect on log abundance") +
#geom_ribbon(fill="skyblue4", alpha=0.5) +
theme_bw() +
ggtitle("Effect of temperature") +
theme(plot.title=element_text(size=11, hjust=0.5))
# combine plots
library(gridExtra)
# combine plots
library(gridExtra)
gridExtra::grid.arrange(precip_plot, temp_plot, ncol=2)
# package dependencies
# use the "install.packages()" command if not already installed
library(terra); library(dplyr); library(magrittr); library(ggplot2); library(sf)
library(rstudioapi); library(tidyr); library(stringr); library(mgcv); library(gratia)
# automatically set working directory
# (or if this doesn't work,
# manually set your working directory to the folder "Week3-Measuring-Env-Effects")
PATH = dirname(rstudioapi::getSourceEditorContext()$path)
setwd(PATH)
mp3
summary(mp3)
# the mosquito surveillance data are stored as a csv
# mosquito counts are stored in the "count" column
dd = read.csv("./data/vectabundance/italy_vectabundance_summercounts_monthly.csv")
# an accompanying shapefile of italian municipalities
shp = sf::st_read("./data/shapefiles/italy_vectabundance_regions.shp")
# ensure all categorical variables are coded as factors
# so model doesn't interpret them as numeric!
dd$ID = as.factor(dd$ID)
dd$month = as.factor(dd$month)
# adding a nonlinear temperature effect
m5 = mgcv::gam(count ~ s(temperature_c, k=9, bs="tp") + s(ID, bs="re") + Region + year + month,
data=dd,
family="nb",
method="REML")
# gratia::draw() is a useful function to plot all fitted functions from an mgcv model
# here we customise to just plot the temperature effect and improve aesthetics
gratia::draw(m5, select=1) +
xlab("Monthly temperature (C)") +
ylab("Effect on log abundance") +
theme_bw() +
ggtitle("Effect of temperature on Ae. albopictus abundance") +
theme(plot.title=element_text(size=11, hjust=0.5))
# fit model for linear precip
mp1 = mgcv::gam(count ~ scale(precip_mm) + s(ID, bs="re") + Region + year + month,
data=dd,
family="nb",
method="REML")
# fit model for linear precip
mp1 = mgcv::gam(count ~ scale(precip_mm) + s(ID, bs="re") + Region + year + month,
data=dd,
family="nb",
method="REML")
# suggests a significant negative effect of precip
summary(mp1)
4.736e-02
# fit model for nonlinear precip
# thin-plate regression spline
mp2 = mgcv::gam(count ~ s(precip_mm, k=9, bs="tp") + s(ID, bs="re") + Region + year + month,
data=dd,
family="nb",
method="REML")
# fit model for nonlinear precip
# thin-plate regression spline
mp2 = mgcv::gam(count ~ s(precip_mm, k=9, bs="tp") + s(ID, bs="re") + Region + year + month,
data=dd,
family="nb",
method="REML")
# compare AIC between two models
# nonlinear model is much more strongly supported
# (much lower AIC score)
AIC(mp1)
# compare AIC between two models
# nonlinear model is much more strongly supported
# (much lower AIC score)
AIC(mp1)
AIC(mp2)
# plot the nonlinear precip effect
# what does this suggest about the relationship?
gratia::draw(mp2, select=1) +
xlab("Monthly precipitation (mm)") +
ylab("Effect on log abundance") +
#geom_ribbon(fill="skyblue4", alpha=0.5) +
theme_bw() +
ggtitle("Effect of precipitation on Ae. albopictus abundance") +
theme(plot.title=element_text(size=11, hjust=0.5))
# plot temperature vs precip - slightly negatively correlated
ggplot(dd) +
geom_point(aes(precip_mm, temperature_c), alpha=0.6) +
theme_classic()
# pearson correlation = around -0.69
cor.test(dd$temperature_c, dd$precip_mm)
# include this in the model
mp3 = mgcv::gam(count ~ s(precip_mm, k=9, bs="tp") + s(temperature_c, k=9, bs="tp") + s(ID, bs="re") + Region + year + month,
data=dd,
family="nb",
method="REML")
# include this in the model
mp3 = mgcv::gam(count ~ s(precip_mm, k=9, bs="tp") + s(temperature_c, k=9, bs="tp") + s(ID, bs="re") + Region + year + month,
data=dd,
family="nb",
method="REML")
# compare AIC
# the model with both is much more strongly supported via AIC
AIC(mp2)
AIC(mp3)
summary(mp3)
# the mosquito surveillance data are stored as a csv
# mosquito counts are stored in the "count" column
dd = read.csv("./data/vectabundance/italy_vectabundance_summercounts_monthly.csv")
# an accompanying shapefile of italian municipalities
shp = sf::st_read("./data/shapefiles/italy_vectabundance_regions.shp")
# shapefile of italian border (for mapping)
shp_ita = sf::st_read("./data/shapefiles/gadm41_ITA_0.shp")
# ensure all categorical variables are coded as factors
# so model doesn't interpret them as numeric!
dd$ID = as.factor(dd$ID)
dd$year = as.factor(dd$year)
dd$month = as.factor(dd$month)
# fit model for linear precip
mp1 = mgcv::gam(count ~ scale(precip_mm) + s(ID, bs="re") + Region + year + month,
data=dd,
family="nb",
method="REML")
# suggests a small but significant positive effect of precip
summary(mp1)
# fit model for nonlinear precip
# thin-plate regression spline
mp2 = mgcv::gam(count ~ s(precip_mm, k=9, bs="tp") + s(ID, bs="re") + Region + year + month,
data=dd,
family="nb",
method="REML")
# fit model for nonlinear precip
# thin-plate regression spline
mp2 = mgcv::gam(count ~ s(precip_mm, k=9, bs="tp") + s(ID, bs="re") + Region + year + month,
data=dd,
family="nb",
method="REML")
# compare AIC between two models
# nonlinear model is more strongly supported
# (lower AIC score)
AIC(mp1)
AIC(mp2)
# plot the nonlinear precip effect
# what does this suggest about the relationship?
gratia::draw(mp2, select=1) +
xlab("Monthly precipitation (mm)") +
ylab("Effect on log abundance") +
#geom_ribbon(fill="skyblue4", alpha=0.5) +
theme_bw() +
ggtitle("Effect of precipitation on Ae. albopictus abundance") +
theme(plot.title=element_text(size=11, hjust=0.5))
# plot temperature vs precip - slightly negatively correlated
ggplot(dd) +
geom_point(aes(precip_mm, temperature_c), alpha=0.6) +
theme_classic()
# pearson correlation = around -0.69
cor.test(dd$temperature_c, dd$precip_mm)
# include this in the model
mp3 = mgcv::gam(count ~ s(precip_mm, k=9, bs="tp") + s(temperature_c, k=9, bs="tp") + s(ID, bs="re") + Region + year + month,
data=dd,
family="nb",
method="REML")
# compare AIC
# the model with both is much more strongly supported via AIC
AIC(mp2)
AIC(mp3)
# precipitation
# select the first spline (select=1) using the draw function
precip_plot = gratia::draw(mp3, select=1) +
xlab("Monthly precipitation (mm)") +
ylab("Effect on log abundance") +
#geom_ribbon(fill="skyblue4", alpha=0.5) +
theme_bw() +
ggtitle("Effect of precipitation") +
theme(plot.title=element_text(size=11, hjust=0.5))
# temperature
# select the second spline (select=1) using the draw function
temp_plot = gratia::draw(mp3, select=2) +
xlab("Monthly temperature (C)") +
ylab("Effect on log abundance") +
#geom_ribbon(fill="skyblue4", alpha=0.5) +
theme_bw() +
ggtitle("Effect of temperature") +
theme(plot.title=element_text(size=11, hjust=0.5))
# combine plots
library(gridExtra)
gridExtra::grid.arrange(precip_plot, temp_plot, ncol=2)
